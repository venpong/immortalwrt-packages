--- a/go.mod
+++ b/go.mod
@@ -1,6 +1,6 @@
 module github.com/IrineSistiana/mosdns/v5
 
-go 1.19
+go 1.18
 
 require (
 	github.com/go-chi/chi/v5 v5.0.8
@@ -11,11 +11,12 @@ require (
 	github.com/mitchellh/mapstructure v1.5.0
 	github.com/nadoo/ipset v0.5.0
 	github.com/prometheus/client_golang v1.14.0
-	github.com/quic-go/quic-go v0.33.0
+	github.com/quic-go/quic-go v0.32.0
 	github.com/spf13/cobra v1.6.1
 	github.com/spf13/viper v1.15.0
 	github.com/stretchr/testify v1.8.1
 	github.com/vishvananda/netlink v1.2.1-beta.2.0.20221107222636-d3c0a2caa559
+	go.uber.org/atomic v1.10.0
 	go.uber.org/zap v1.24.0
 	go4.org/netipx v0.0.0-20230303233057-f1b76eb4bb35
 	golang.org/x/exp v0.0.0-20230303215020-44a13b063f3e
@@ -51,6 +52,7 @@ require (
 	github.com/prometheus/common v0.41.0 // indirect
 	github.com/prometheus/procfs v0.9.0 // indirect
 	github.com/quic-go/qpack v0.4.0 // indirect
+	github.com/quic-go/qtls-go1-18 v0.2.0 // indirect
 	github.com/quic-go/qtls-go1-19 v0.2.1 // indirect
 	github.com/quic-go/qtls-go1-20 v0.1.1 // indirect
 	github.com/spf13/afero v1.9.4 // indirect
@@ -59,7 +61,6 @@ require (
 	github.com/spf13/pflag v1.0.5 // indirect
 	github.com/subosito/gotenv v1.4.2 // indirect
 	github.com/vishvananda/netns v0.0.1 // indirect
-	go.uber.org/atomic v1.10.0 // indirect
 	go.uber.org/multierr v1.9.0 // indirect
 	golang.org/x/crypto v0.6.0 // indirect
 	golang.org/x/mod v0.8.0 // indirect
--- a/go.sum
+++ b/go.sum
@@ -197,12 +197,14 @@ github.com/prometheus/procfs v0.9.0 h1:w
 github.com/prometheus/procfs v0.9.0/go.mod h1:+pB4zwohETzFnmlpe6yd2lSc+0/46IYZRB/chUwxUZY=
 github.com/quic-go/qpack v0.4.0 h1:Cr9BXA1sQS2SmDUWjSofMPNKmvF6IiIfDRmgU0w1ZCo=
 github.com/quic-go/qpack v0.4.0/go.mod h1:UZVnYIfi5GRk+zI9UMaCPsmZ2xKJP7XBUvVyT1Knj9A=
+github.com/quic-go/qtls-go1-18 v0.2.0 h1:5ViXqBZ90wpUcZS0ge79rf029yx0dYB0McyPJwqqj7U=
+github.com/quic-go/qtls-go1-18 v0.2.0/go.mod h1:moGulGHK7o6O8lSPSZNoOwcLvJKJ85vVNc7oJFD65bc=
 github.com/quic-go/qtls-go1-19 v0.2.1 h1:aJcKNMkH5ASEJB9FXNeZCyTEIHU1J7MmHyz1Q1TSG1A=
 github.com/quic-go/qtls-go1-19 v0.2.1/go.mod h1:ySOI96ew8lnoKPtSqx2BlI5wCpUVPT05RMAlajtnyOI=
 github.com/quic-go/qtls-go1-20 v0.1.1 h1:KbChDlg82d3IHqaj2bn6GfKRj84Per2VGf5XV3wSwQk=
 github.com/quic-go/qtls-go1-20 v0.1.1/go.mod h1:JKtK6mjbAVcUTN/9jZpvLbGxvdWIKS8uT7EiStoU1SM=
-github.com/quic-go/quic-go v0.33.0 h1:ItNoTDN/Fm/zBlq769lLJc8ECe9gYaW40veHCCco7y0=
-github.com/quic-go/quic-go v0.33.0/go.mod h1:YMuhaAV9/jIu0XclDXwZPAsP/2Kgr5yMYhe9oxhhOFA=
+github.com/quic-go/quic-go v0.32.0 h1:lY02md31s1JgPiiyfqJijpu/UX/Iun304FI3yUqX7tA=
+github.com/quic-go/quic-go v0.32.0/go.mod h1:/fCsKANhQIeD5l76c2JFU+07gVE3KaA0FP+0zMWwfwo=
 github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=
 github.com/rogpeppe/go-internal v1.6.1 h1:/FiVV8dS/e+YqF2JvO3yXRFbBLTIuSDkuC7aBOAvL+k=
 github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=
--- a/pkg/cache/cache.go
+++ b/pkg/cache/cache.go
@@ -23,7 +23,7 @@ import (
 	"github.com/IrineSistiana/mosdns/v5/pkg/concurrent_lru"
 	"github.com/IrineSistiana/mosdns/v5/pkg/concurrent_map"
 	"github.com/IrineSistiana/mosdns/v5/pkg/utils"
-	"sync/atomic"
+	"go.uber.org/atomic"
 	"time"
 )
 
--- a/pkg/query_context/context.go
+++ b/pkg/query_context/context.go
@@ -21,9 +21,9 @@ package query_context
 
 import (
 	"github.com/miekg/dns"
+	"go.uber.org/atomic"
 	"go.uber.org/zap"
 	"go.uber.org/zap/zapcore"
-	"sync/atomic"
 	"time"
 )
 
--- a/pkg/query_context/kv.go
+++ b/pkg/query_context/kv.go
@@ -19,7 +19,7 @@
 
 package query_context
 
-import "sync/atomic"
+import "go.uber.org/atomic"
 
 var kId atomic.Uint32
 
--- a/pkg/upstream/event_stat.go
+++ b/pkg/upstream/event_stat.go
@@ -21,7 +21,7 @@ package upstream
 
 import (
 	"net"
-	"sync/atomic"
+	"go.uber.org/atomic"
 )
 
 type Event int
--- a/pkg/upstream/transport/dns_conn.go
+++ b/pkg/upstream/transport/dns_conn.go
@@ -23,9 +23,9 @@ import (
 	"context"
 	"fmt"
 	"github.com/miekg/dns"
+	"go.uber.org/atomic"
 	"io"
 	"sync"
-	"sync/atomic"
 )
 
 // dnsConn is a low-level connection for dns.
--- a/pkg/upstream/transport/utils.go
+++ b/pkg/upstream/transport/utils.go
@@ -21,8 +21,8 @@ package transport
 
 import (
 	"github.com/miekg/dns"
+	"go.uber.org/atomic"
 	"math/rand"
-	"sync/atomic"
 	"time"
 )
 
--- a/plugin/executable/cache/cache.go
+++ b/plugin/executable/cache/cache.go
@@ -34,6 +34,7 @@ import (
 	"github.com/klauspost/compress/gzip"
 	"github.com/miekg/dns"
 	"github.com/prometheus/client_golang/prometheus"
+	"go.uber.org/atomic"
 	"go.uber.org/zap"
 	"golang.org/x/sync/singleflight"
 	"google.golang.org/protobuf/proto"
@@ -42,7 +43,6 @@ import (
 	"os"
 	"strconv"
 	"sync"
-	"sync/atomic"
 	"time"
 )
 
--- a/plugin/executable/cache/utils.go
+++ b/plugin/executable/cache/utils.go
@@ -35,7 +35,10 @@ type key string
 var seed = maphash.MakeSeed()
 
 func (k key) Sum() uint64 {
-	return maphash.String(seed, string(k))
+	var h maphash.Hash
+	h.SetSeed(seed)
+	h.WriteString(string(k))
+	return h.Sum64()
 }
 
 // getMsgKey returns a string key for the query msg, or an empty
--- a/plugin/executable/reverse_lookup/utils.go
+++ b/plugin/executable/reverse_lookup/utils.go
@@ -30,5 +30,9 @@ var seed = maphash.MakeSeed()
 
 func (k key) Sum() uint64 {
 	b := netip.Addr(k).As16()
-	return maphash.Bytes(seed, b[:])
+
+	var h maphash.Hash
+	h.SetSeed(seed)
+	h.Write(b[:])
+	return h.Sum64()
 }
